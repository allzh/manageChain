# Copyright IBM Corp. All Rights Reserved.
#
# SPDX-License-Identifier: Apache-2.0
#

version: '2'

networks:
    default:

services:

    zookeeper0:
        container_name: zookeeper0
        image: hyperledger/fabric-zookeeper
        environment:
            - ZOO_MY_ID=1
            - ZOO_SERVERS=server.1=0.0.0.0:2888:3888 server.2=172.16.93.215:2889:3889 server.3=172.16.93.215:2890:3890
        ports:
            - 2181:2181
            - 2888:2888
            - 3888:3888
        # networks:
        #   default:
        #      aliases:
        #        - ${CORE_PEER_NETWORKID}

    zookeeper1:
        container_name: zookeeper1
        image: hyperledger/fabric-zookeeper
        environment:
            - ZOO_MY_ID=2
            - ZOO_SERVERS=server.1=172.16.93.215:2888:3888 server.2=0.0.0.0:2888:3888 server.3=172.16.93.215:2890:3890
        ports:
            - 2182:2181
            - 2889:2888
            - 3889:3888
        # networks:
        #   default:
        #      aliases:
        #        - ${CORE_PEER_NETWORKID}

    zookeeper2:
        container_name: zookeeper2
        image: hyperledger/fabric-zookeeper
        environment:
            - ZOO_MY_ID=3
            - ZOO_SERVERS=server.1=172.16.93.215:2888:3888 server.2=172.16.93.215:2889:3889 server.3=0.0.0.0:2888:3888
        ports:
            - 2183:2181
            - 2890:2888
            - 3890:3888
        # networks:
        #   default:
        #      aliases:
        #        - ${CORE_PEER_NETWORKID}

    kafka0:
        image: hyperledger/fabric-kafka
        container_name: kafka0
        environment:
            - KAFKA_LOG_RETENTION_MS=-1
            - KAFKA_MESSAGE_MAX_BYTES=103809024
            - KAFKA_REPLICA_FETCH_MAX_BYTES=103809024
            - KAFKA_BROKER_ID=0
            - KAFKA_LISTENERS=PLAINTEXT://:9092
            - KAFKA_PORT=9092
            - KAFKA_ADVERTISED_HOST_NAME=172.16.93.215
            - KAFKA_ZOOKEEPER_CONNECT=172.16.93.215:2181,172.16.93.215:2182,172.16.93.215:2183
            - KAFKA_UNCLEAN_LEADER_ELECTION_ENABLE=false
            - KAFKA_DEFAULT_REPLICATION_FACTOR=3
            - KAFKA_MIN_INSYNC_REPLICAS=2
        ports:
            - 9092:9092
        # depends_on:
        #     - zookeeper0
        #     - zookeeper1
        #     - zookeeper2
        # links:
        #     - zookeeper0:zookeeper0
        #     - zookeeper1:zookeeper1
        #     - zookeeper2:zookeeper2
        # networks:
        #   default:
        #      aliases:
        #        - ${CORE_PEER_NETWORKID}

    kafka1:
        image: hyperledger/fabric-kafka
        container_name: kafka1
        environment:
            - KAFKA_LOG_RETENTION_MS=-1
            - KAFKA_MESSAGE_MAX_BYTES=103809024
            - KAFKA_REPLICA_FETCH_MAX_BYTES=103809024
            - KAFKA_BROKER_ID=1
            - KAFKA_LISTENERS=PLAINTEXT://:9093
            - KAFKA_PORT=9093
            - KAFKA_ADVERTISED_HOST_NAME=172.16.93.215
            - KAFKA_ZOOKEEPER_CONNECT=172.16.93.215:2181,172.16.93.215:2182,172.16.93.215:2183
            - KAFKA_UNCLEAN_LEADER_ELECTION_ENABLE=false
            - KAFKA_DEFAULT_REPLICATION_FACTOR=3
            - KAFKA_MIN_INSYNC_REPLICAS=2
        ports:
            - 9093:9093
        # depends_on:
        #     - zookeeper0
        #     - zookeeper1
        #     - zookeeper2
        # links:
        #     - zookeeper0:zookeeper0
        #     - zookeeper1:zookeeper1
        #     - zookeeper2:zookeeper2
        # networks:
        #   default:
        #      aliases:
        #        - ${CORE_PEER_NETWORKID}

    kafka2:
        image: hyperledger/fabric-kafka
        container_name: kafka2
        environment:
            - KAFKA_LOG_RETENTION_MS=-1
            - KAFKA_MESSAGE_MAX_BYTES=103809024
            - KAFKA_REPLICA_FETCH_MAX_BYTES=103809024
            - KAFKA_BROKER_ID=2
            - KAFKA_LISTENERS=PLAINTEXT://:9094
            - KAFKA_PORT=9094
            - KAFKA_ADVERTISED_HOST_NAME=172.16.93.215
            - KAFKA_ZOOKEEPER_CONNECT=172.16.93.215:2181,172.16.93.215:2182,172.16.93.215:2183         
            - KAFKA_UNCLEAN_LEADER_ELECTION_ENABLE=false
            - KAFKA_DEFAULT_REPLICATION_FACTOR=3
            - KAFKA_MIN_INSYNC_REPLICAS=2
        ports:
            - 9094:9094
        # depends_on:
        #     - zookeeper0
        #     - zookeeper1
        #     - zookeeper2
        # links:
        #     - zookeeper0:zookeeper0
        #     - zookeeper1:zookeeper1
        #     - zookeeper2:zookeeper2
        # networks:
        #   default:
        #      aliases:
        #        - ${CORE_PEER_NETWORKID}

    kafka3:
        image: hyperledger/fabric-kafka
        container_name: kafka3
        environment:
            - KAFKA_LOG_RETENTION_MS=-1
            - KAFKA_MESSAGE_MAX_BYTES=103809024
            - KAFKA_REPLICA_FETCH_MAX_BYTES=103809024
            - KAFKA_BROKER_ID=3
            - KAFKA_LISTENERS=PLAINTEXT://:9095
            - KAFKA_PORT=9095
            - KAFKA_ADVERTISED_HOST_NAME=172.16.93.215
            - KAFKA_ZOOKEEPER_CONNECT=172.16.93.215:2181,172.16.93.215:2182,172.16.93.215:2183
            - KAFKA_UNCLEAN_LEADER_ELECTION_ENABLE=false
            - KAFKA_DEFAULT_REPLICATION_FACTOR=3
            - KAFKA_MIN_INSYNC_REPLICAS=2
        ports:
            - 9095:9095
        # depends_on:
        #     - zookeeper0
        #     - zookeeper1
        #     - zookeeper2
        # links:
        #     - zookeeper0:zookeeper0
        #     - zookeeper1:zookeeper1
        #     - zookeeper2:zookeeper2
        # networks:
        #   default:
        #      aliases:
        #        - ${CORE_PEER_NETWORKID}

    orderer0.testorg1:
        container_name: orderer0.testorg1
        image: hyperledger/fabric-orderer
        environment:
            - ORDERER_GENERAL_LOGLEVEL=debug
            #- CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=${CORE_PEER_NETWORKID}_default
            - ORDERER_GENERAL_LOCALMSPDIR=/var/hyperledger/orderer/msp
            - ORDERER_GENERAL_LOCALMSPID=testorg1
            - ORDERER_GENERAL_LISTENADDRESS=0.0.0.0
            - ORDERER_GENERAL_LISTENPORT=56050
            - CONFIGTX_ORDERER_ORDERERTYPE=kafka
            # - CONFIGTX_ORDERER_KAFKA_BROKERS=[172.16.93.215:9092,172.16.93.215:9093,172.16.93.215:9094,172.16.93.215:9095]
            - ORDERER_KAFKA_RETRY_SHORTINTERVAL=1s
            - ORDERER_KAFKA_RETRY_SHORTTOTAL=30s
            - ORDERER_KAFKA_VERBOSE=true
            # - CONFIGTX_ORDERER_ADDRESSES=[172.16.93.215:56050,172.16.93.215:57050]
            - ORDERER_GENERAL_LEDGERTYPE=ram
            - ORDERER_GENERAL_GENESISPROFILE=SampleInsecureKafka
            - ORDERER_GENERAL_GENESISMETHOD=file
            - ORDERER_GENERAL_GENESISFILE=/var/hyperledger/orderer/orderer.genesis.block

            # TLS settings
            - ORDERER_GENERAL_TLS_ENABLED=true
            - ORDERER_GENERAL_TLS_PRIVATEKEY=/var/hyperledger/orderer/tls/server.key
            - ORDERER_GENERAL_TLS_CERTIFICATE=/var/hyperledger/orderer/tls/server.crt
            - ORDERER_GENERAL_TLS_ROOTCAS=[/var/hyperledger/orderer/tls/ca.crt]
        volumes:
            - ./channel-artifacts/orderer.block:/var/hyperledger/orderer/orderer.genesis.block
            - ./crypto-config/testorg1/orderers/orderer0/msp:/var/hyperledger/orderer/msp
            - ./crypto-config/testorg1/orderers/orderer0/tls:/var/hyperledger/orderer/tls
            - ./orderer0_logs:/var/fabric_logs/
        working_dir: /opt/gopath/src/github.com/hyperledger/fabric/orderer
        command: orderer
        ports:
          - 56050:56050
        # depends_on:
        #     - kafka0
        #     - kafka1
        #     - kafka2
        #     - kafka3
        # links:
        #     - kafka0:kafka0
        #     - kafka1:kafka1
        #     - kafka2:kafka2
        #     - kafka3:kafka3
        # networks:
        #   default:
        #      aliases:
        #        - ${CORE_PEER_NETWORKID}

    orderer0.testorg2:
        container_name: orderer0.testorg2
        image: hyperledger/fabric-orderer
        environment:
            - ORDERER_GENERAL_LOGLEVEL=debug
            #- CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=${CORE_PEER_NETWORKID}_default
            - ORDERER_GENERAL_LOCALMSPDIR=/var/hyperledger/msp
            - ORDERER_GENERAL_LOCALMSPID=testorg2
            - ORDERER_GENERAL_LISTENADDRESS=0.0.0.0
            - ORDERER_GENERAL_LISTENPORT=57050
            - CONFIGTX_ORDERER_ORDERERTYPE=kafka
            - CONFIGTX_ORDERER_KAFKA_BROKERS=[172.16.93.215:9092,172.16.93.215:9093,172.16.93.215:9094,172.16.93.215:9095]
            - ORDERER_KAFKA_RETRY_SHORTINTERVAL=1s
            - ORDERER_KAFKA_RETRY_SHORTTOTAL=30s
            - ORDERER_KAFKA_VERBOSE=true
            - CONFIGTX_ORDERER_ADDRESSES=[172.16.93.215:56050,172.16.93.215:57050]
            - ORDERER_GENERAL_LEDGERTYPE=ram
            - ORDERER_GENERAL_GENESISPROFILE=SampleInsecureKafka
            - ORDERER_GENERAL_GENESISMETHOD=file
            - ORDERER_GENERAL_GENESISFILE=/var/hyperledger/configs/orderer.block
            # TLS settings
            - ORDERER_GENERAL_TLS_ENABLED=true
            - ORDERER_GENERAL_TLS_PRIVATEKEY=/var/hyperledger/tls/server.key
            - ORDERER_GENERAL_TLS_CERTIFICATE=/var/hyperledger/tls/server.crt
            - ORDERER_GENERAL_TLS_ROOTCAS=[/var/hyperledger/tls/ca.crt]
        volumes:
            - ./channel-artifacts:/var/hyperledger/configs
            - ./crypto-config/testorg2/orderers/orderer0/msp:/var/hyperledger/msp
            - ./crypto-config/testorg2/orderers/orderer0/tls:/var/hyperledger/tls
            - ./orderer1_logs:/var/fabric_logs/
        working_dir: /opt/gopath/src/github.com/hyperledger/fabric/orderer
        command: orderer
        ports:
          - 57050:57050
        # depends_on:
        #     - kafka0
        #     - kafka1
        #     - kafka2
        #     - kafka3
        # links:
        #     - kafka0:kafka0
        #     - kafka1:kafka1
        #     - kafka2:kafka2
        #     - kafka3:kafka3
        # networks:
        #   default:
        #      aliases:
        #        - ${CORE_PEER_NETWORKID}
    orderer0.testorg3:
        container_name: orderer0.testorg3
        image: hyperledger/fabric-orderer
        environment:
            - ORDERER_GENERAL_LOGLEVEL=debug
            #- CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=${CORE_PEER_NETWORKID}_default
            - ORDERER_GENERAL_LOCALMSPDIR=/var/hyperledger/orderer/msp
            - ORDERER_GENERAL_LOCALMSPID=testorg3
            - ORDERER_GENERAL_LISTENADDRESS=0.0.0.0
            - ORDERER_GENERAL_LISTENPORT=58050
            - CONFIGTX_ORDERER_ORDERERTYPE=kafka
            # - CONFIGTX_ORDERER_KAFKA_BROKERS=[172.16.93.215:9092,172.16.93.215:9093,172.16.93.215:9094,172.16.93.215:9095]
            - ORDERER_KAFKA_RETRY_SHORTINTERVAL=1s
            - ORDERER_KAFKA_RETRY_SHORTTOTAL=30s
            - ORDERER_KAFKA_VERBOSE=true
            # - CONFIGTX_ORDERER_ADDRESSES=[172.16.93.215:56050,172.16.93.215:57050]
            - ORDERER_GENERAL_LEDGERTYPE=ram
            - ORDERER_GENERAL_GENESISPROFILE=SampleInsecureKafka
            - ORDERER_GENERAL_GENESISMETHOD=file
            - ORDERER_GENERAL_GENESISFILE=/var/hyperledger/orderer/orderer.genesis.block

            # TLS settings
            - ORDERER_GENERAL_TLS_ENABLED=true
            - ORDERER_GENERAL_TLS_PRIVATEKEY=/var/hyperledger/orderer/tls/server.key
            - ORDERER_GENERAL_TLS_CERTIFICATE=/var/hyperledger/orderer/tls/server.crt
            - ORDERER_GENERAL_TLS_ROOTCAS=[/var/hyperledger/orderer/tls/ca.crt]
        volumes:
            - ./channel-artifacts/orderer.block:/var/hyperledger/orderer/orderer.genesis.block
            - ./crypto-config/testorg3/orderers/orderer0/msp:/var/hyperledger/orderer/msp
            - ./crypto-config/testorg3/orderers/orderer0/tls:/var/hyperledger/orderer/tls
            - ./orderer3_logs:/var/fabric_logs/
        working_dir: /opt/gopath/src/github.com/hyperledger/fabric/orderer
        command: orderer
        ports:
          - 58050:58050
    # orderer2.example.com:
    #     container_name: orderer2.example.com
    #     image: hyperledger/fabric-orderer
    #     environment:
    #         - ORDERER_GENERAL_LOGLEVEL=debug
    #         #- CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=${CORE_PEER_NETWORKID}_default
    #         - ORDERER_GENERAL_LOCALMSPDIR=/var/hyperledger/msp
    #         - ORDERER_GENERAL_LOCALMSPID=OrdererMSP1
    #         - ORDERER_GENERAL_LISTENADDRESS=0.0.0.0
    #         - ORDERER_GENERAL_LISTENPORT=58050
    #         - CONFIGTX_ORDERER_ORDERERTYPE=kafka
    #         - CONFIGTX_ORDERER_KAFKA_BROKERS=[192.168.9.31:9092,192.168.9.34:9093,192.168.9.38:9094,192.168.9.40:9095]
    #         - ORDERER_KAFKA_RETRY_SHORTINTERVAL=1s
    #         - ORDERER_KAFKA_RETRY_SHORTTOTAL=30s
    #         - ORDERER_KAFKA_VERBOSE=true
    #         - CONFIGTX_ORDERER_ADDRESSES=[192.168.9.31:56050,192.168.9.34:57050,192.168.9.38:58050]
    #         - ORDERER_GENERAL_LEDGERTYPE=ram
    #         - ORDERER_GENERAL_GENESISPROFILE=SampleInsecureKafka
    #         - ORDERER_GENERAL_GENESISMETHOD=file
    #         - ORDERER_GENERAL_GENESISFILE=/var/hyperledger/configs/orderer.block
    #         # TLS settings
    #         - ORDERER_GENERAL_TLS_ENABLED=false
    #         #- ORDERER_GENERAL_TLS_PRIVATEKEY=/var/hyperledger/tls/server.key
    #         #- ORDERER_GENERAL_TLS_CERTIFICATE=/var/hyperledger/tls/server.crt
    #         #- ORDERER_GENERAL_TLS_ROOTCAS=[/var/hyperledger/tls/ca.crt]
    #     volumes:
    #         - ./channel-artifacts:/var/hyperledger/configs
    #         - ./crypto-config/ordererOrganizations/example.com/orderers/orderer2.example.com/msp:/var/hyperledger/msp
    #         - ./crypto-config/ordererOrganizations/example.com/orderers/orderer2.example.com/tls:/var/hyperledger/tls
    #         - ./fabric_logs:/tmp/fabric_logs/
    #     working_dir: /opt/gopath/src/github.com/hyperledger/fabric/orderer
    #     command: orderer
    #     ports:
    #       - 58050:58050
        # depends_on:
        #     - kafka0
        #     - kafka1
        #     - kafka2
        #     - kafka3
        # links:
        #     - kafka0:kafka0
        #     - kafka1:kafka1
        #     - kafka2:kafka2
        #     - kafka3:kafka3
        # networks:
        #   default:
        #      aliases:
        #        - ${CORE_PEER_NETWORKID}
    # orderer3.example.com:
    #     container_name: orderer3.example.com
    #     image: hyperledger/fabric-orderer
    #     environment:
    #         - ORDERER_GENERAL_LOGLEVEL=debug
    #         #- CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=${CORE_PEER_NETWORKID}_default
    #         - ORDERER_GENERAL_LOCALMSPDIR=/var/hyperledger/msp
    #         - ORDERER_GENERAL_LOCALMSPID=OrdererMSP1
    #         - ORDERER_GENERAL_LISTENADDRESS=0.0.0.0
    #         - ORDERER_GENERAL_LISTENPORT=59050
    #         - CONFIGTX_ORDERER_ORDERERTYPE=kafka
    #         - CONFIGTX_ORDERER_KAFKA_BROKERS=[192.168.9.20:9092,192.168.9.21:9093,192.168.9.23:9094,192.168.9.24:9095]
    #         - ORDERER_KAFKA_RETRY_SHORTINTERVAL=1s
    #         - ORDERER_KAFKA_RETRY_SHORTTOTAL=30s
    #         - ORDERER_KAFKA_VERBOSE=true
    #         - CONFIGTX_ORDERER_ADDRESSES=[192.168.9.20:56050,192.168.9.21:57050,192.168.9.23:58050,192.168.9.24:59050]
    #         - ORDERER_GENERAL_LEDGERTYPE=ram
    #         - ORDERER_GENERAL_GENESISPROFILE=SampleInsecureKafka
    #         - ORDERER_GENERAL_GENESISMETHOD=file
    #         - ORDERER_GENERAL_GENESISFILE=/var/hyperledger/configs/orderer.block
    #         # TLS settings
    #         - ORDERER_GENERAL_TLS_ENABLED=false
    #         #- ORDERER_GENERAL_TLS_PRIVATEKEY=/var/hyperledger/tls/server.key
    #         #- ORDERER_GENERAL_TLS_CERTIFICATE=/var/hyperledger/tls/server.crt
    #         #- ORDERER_GENERAL_TLS_ROOTCAS=[/var/hyperledger/tls/ca.crt]
    #     volumes:
    #         - ./channel-artifacts:/var/hyperledger/configs
    #         - ./crypto-config/ordererOrganizations/example.com/orderers/orderer3.example.com/msp:/var/hyperledger/msp
    #         - ./crypto-config/ordererOrganizations/example.com/orderers/orderer3.example.com/tls:/var/hyperledger/tls
    #         - ./fabric_logs:/tmp/fabric_logs/
    #     working_dir: /opt/gopath/src/github.com/hyperledger/fabric/orderer
    #     command: orderer
    #     ports:
    #       - 59050:59050
        # depends_on:
        #     - kafka0
        #     - kafka1
        #     - kafka2
        #     - kafka3
        # links:
        #     - kafka0:kafka0
        #     - kafka1:kafka1
        #     - kafka2:kafka2
        #     - kafka3:kafka3
        # networks:
        #   default:
        #      aliases:
        #        - ${CORE_PEER_NETWORKID}        

    peer0.testorg1:
        container_name: peer0.testorg1
        image: hyperledger/fabric-peer
        environment:
            - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
            #- CORE_PEER_NETWORKID=${CORE_PEER_NETWORKID}
            #- CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=${CORE_PEER_NETWORKID}_default
            - CORE_PEER_ID=peer0.testorg1
            - CORE_PEER_ADDRESSAUTODETECT=false
            - CORE_PEER_ADDRESS=172.16.93.215:56051
            - CORE_PEER_GOSSIP_EXTERNALENDPOINT=172.16.93.215:56051
            - CORE_PEER_GOSSIP_BOOTSTRAP=172.16.93.215:56051
            - CORE_PEER_CHAINCODEADDRESS=172.16.93.215:56052
            - CORE_PEER_CHAINCODELISTENADDRESS=0.0.0.0:7052
            - CORE_PEER_GOSSIP_ORGLEADER=false
            - CORE_PEER_GOSSIP_USELEADERELECTION=true
            - CORE_PEER_GOSSIP_SKIPHANDSHAKE=true
            - CORE_PEER_PROFILE_ENABLED=true
            - CORE_PEER_MSPCONFIGPATH=/var/hyperledger/msp
            - CORE_PEER_LOCALMSPID=testorg1
            - CORE_LOGGING_LEVEL=DEBUG
            - CORE_CHAINCODE_BUILDER=hyperledger/fabric-ccenv:latest
            - CORE_CHAINCODE_GOLANG_RUNTIME=hyperledger/fabric-yxbaseos:latest
            # TLS settings
            - CORE_PEER_TLS_ENABLED=true
            - CORE_PEER_TLS_CERT_FILE=/var/hyperledger/tls/server.crt
            - CORE_PEER_TLS_KEY_FILE=/var/hyperledger/tls/server.key
            - CORE_PEER_TLS_ROOTCERT_FILE=/var/hyperledger/tls/ca.crt
        volumes:
            - /var/run/:/host/var/run/
            - ./channel-artifacts:/var/hyperledger/configs
            - ./crypto-config/testorg1/users/Admin@testorg1/msp:/var/hyperledger/msp
            - ./crypto-config/testorg1/peers/peer0/tls:/var/hyperledger/tls
            - ./peer0_org1_logs:/var/fabric_logs/
        ports:
            - 56051:7051
            - 56052:7052
            - 56053:7053
        
        command: peer node start
        # networks:
        #   default:
        #      aliases:
        #        - ${CORE_PEER_NETWORKID}

    peer1.testorg1:
        image: hyperledger/fabric-peer
        container_name: peer1.testorg1
        environment:
            - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
            #- CORE_PEER_NETWORKID=${CORE_PEER_NETWORKID}
            #- CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=${CORE_PEER_NETWORKID}_default
            - CORE_PEER_ID=peer1.testorg1
            - CORE_PEER_ADDRESSAUTODETECT=false
            - CORE_PEER_ADDRESS=172.16.93.215:56151
            - CORE_PEER_GOSSIP_EXTERNALENDPOINT=172.16.93.215:56151
            - CORE_PEER_GOSSIP_BOOTSTRAP=172.16.93.215:56151
            - CORE_PEER_CHAINCODEADDRESS=172.16.93.215:56152
            - CORE_PEER_CHAINCODELISTENADDRESS=0.0.0.0:7052
            - CORE_PEER_GOSSIP_ORGLEADER=false
            - CORE_PEER_GOSSIP_USELEADERELECTION=true
            - CORE_PEER_GOSSIP_SKIPHANDSHAKE=true
            - CORE_PEER_PROFILE_ENABLED=true
            - CORE_PEER_MSPCONFIGPATH=/var/hyperledger/msp
            - CORE_PEER_LOCALMSPID=testorg1
            - CORE_LOGGING_LEVEL=DEBUG
            - CORE_CHAINCODE_BUILDER=hyperledger/fabric-ccenv:latest
            - CORE_CHAINCODE_GOLANG_RUNTIME=hyperledger/fabric-yxbaseos:latest
            # TLS settings
            - CORE_PEER_TLS_ENABLED=true
            - CORE_PEER_TLS_CERT_FILE=/var/hyperledger/tls/server.crt
            - CORE_PEER_TLS_KEY_FILE=/var/hyperledger/tls/server.key
            - CORE_PEER_TLS_ROOTCERT_FILE=/var/hyperledger/tls/ca.crt
        volumes:
            - /var/run/:/host/var/run/
            - ./channel-artifacts:/var/hyperledger/configs
            - ./crypto-config/testorg1/users/Admin@testorg1/msp:/var/hyperledger/msp
            - ./crypto-config/testorg1/peers/peer1/tls:/var/hyperledger/tls
            - ./peer1_org1_logs:/var/fabric_logs/
        ports:
            - 56151:7051
            - 56152:7052
            - 56153:7053
       
        command: peer node start
        # networks:
        #   default:
        #      aliases:
        #        - ${CORE_PEER_NETWORKID}

    peer0.testorg2:
        image: hyperledger/fabric-peer
        container_name: peer0.testorg2
        environment:
            - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
            #- CORE_PEER_NETWORKID=${CORE_PEER_NETWORKID}
            #- CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=${CORE_PEER_NETWORKID}_default
            - CORE_PEER_ID=peer0.testorg2
            - CORE_PEER_ADDRESSAUTODETECT=false
            - CORE_PEER_ADDRESS=172.16.93.215:56251
            - CORE_PEER_GOSSIP_EXTERNALENDPOINT=172.16.93.215:56251
            - CORE_PEER_GOSSIP_BOOTSTRAP=172.16.93.215:56251
            - CORE_PEER_CHAINCODEADDRESS=172.16.93.215:56252
            - CORE_PEER_CHAINCODELISTENADDRESS=0.0.0.0:7052
            - CORE_PEER_GOSSIP_ORGLEADER=false
            - CORE_PEER_GOSSIP_USELEADERELECTION=true
            - CORE_PEER_GOSSIP_SKIPHANDSHAKE=true
            - CORE_PEER_PROFILE_ENABLED=true
            - CORE_PEER_MSPCONFIGPATH=/var/hyperledger/msp
            - CORE_PEER_LOCALMSPID=testorg2
            - CORE_LOGGING_LEVEL=DEBUG
            - CORE_CHAINCODE_BUILDER=hyperledger/fabric-ccenv:latest
            - CORE_CHAINCODE_GOLANG_RUNTIME=hyperledger/fabric-yxbaseos:latest            
            # TLS settings
            - CORE_PEER_TLS_ENABLED=true
            - CORE_PEER_TLS_CERT_FILE=/var/hyperledger/tls/server.crt
            - CORE_PEER_TLS_KEY_FILE=/var/hyperledger/tls/server.key
            - CORE_PEER_TLS_ROOTCERT_FILE=/var/hyperledger/tls/ca.crt
        volumes:
            - /var/run/:/host/var/run/
            - ./channel-artifacts:/var/hyperledger/configs
            - ./crypto-config/testorg2/users/Admin@testorg2/msp:/var/hyperledger/msp
            - ./crypto-config/testorg2/peers/peer0/tls:/var/hyperledger/tls
            - ./peer0_org2_logs:/var/fabric_logs/
        ports:
            - 56251:7051
            - 56252:7052
            - 56253:7053
       
        command: peer node start
        # networks:
        #   default:
        #      aliases:
        #        - ${CORE_PEER_NETWORKID}
    peer1.testorg2:
        image: hyperledger/fabric-peer
        container_name: peer1.testorg2
        environment:
            - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
            #- CORE_PEER_NETWORKID=${CORE_PEER_NETWORKID}
            #- CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=${CORE_PEER_NETWORKID}_default
            - CORE_PEER_ID=peer1.testorg2
            - CORE_PEER_ADDRESSAUTODETECT=false
            - CORE_PEER_ADDRESS=172.16.93.215:56351
            - CORE_PEER_GOSSIP_EXTERNALENDPOINT=172.16.93.215:56351
            - CORE_PEER_GOSSIP_BOOTSTRAP=172.16.93.215:56351
            - CORE_PEER_CHAINCODEADDRESS=172.16.93.215:56352
            - CORE_PEER_CHAINCODELISTENADDRESS=0.0.0.0:7052
            - CORE_PEER_GOSSIP_ORGLEADER=false
            - CORE_PEER_GOSSIP_USELEADERELECTION=true
            - CORE_PEER_GOSSIP_SKIPHANDSHAKE=true
            - CORE_PEER_PROFILE_ENABLED=true
            - CORE_PEER_MSPCONFIGPATH=/var/hyperledger/msp
            - CORE_PEER_LOCALMSPID=testorg2
            - CORE_LOGGING_LEVEL=DEBUG
            - CORE_CHAINCODE_BUILDER=hyperledger/fabric-ccenv:latest
            - CORE_CHAINCODE_GOLANG_RUNTIME=hyperledger/fabric-yxbaseos:latest
            # TLS settings
            - CORE_PEER_TLS_ENABLED=true
            - CORE_PEER_TLS_CERT_FILE=/var/hyperledger/tls/server.crt
            - CORE_PEER_TLS_KEY_FILE=/var/hyperledger/tls/server.key
            - CORE_PEER_TLS_ROOTCERT_FILE=/var/hyperledger/tls/ca.crt
        volumes:
            - /var/run/:/host/var/run/
            - ./channel-artifacts:/var/hyperledger/configs
            - ./crypto-config/testorg2/users/Admin@testorg2/msp:/var/hyperledger/msp
            - ./crypto-config/testorg2/peers/peer1/tls:/var/hyperledger/tls
            - ./peer1_org2_logs:/var/fabric_logs/
        ports:
            - 56351:7051
            - 56352:7052
            - 56353:7053
       
        command: peer node start
        # networks:
        #   default:
        #      aliases:
        #        - ${CORE_PEER_NETWORKID}
    peer0.testorg3:
        image: hyperledger/fabric-peer
        container_name: peer0.testorg3
        environment:
            - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
            #- CORE_PEER_NETWORKID=${CORE_PEER_NETWORKID}
            #- CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=${CORE_PEER_NETWORKID}_default
            - CORE_PEER_ID=peer0.testorg3
            - CORE_PEER_ADDRESSAUTODETECT=false
            - CORE_PEER_ADDRESS=172.16.93.215:56451
            - CORE_PEER_GOSSIP_EXTERNALENDPOINT=172.16.93.215:56451
            - CORE_PEER_GOSSIP_BOOTSTRAP=172.16.93.215:56451
            - CORE_PEER_CHAINCODEADDRESS=172.16.93.215:56452
            - CORE_PEER_CHAINCODELISTENADDRESS=0.0.0.0:7052
            - CORE_PEER_GOSSIP_ORGLEADER=false
            - CORE_PEER_GOSSIP_USELEADERELECTION=true
            - CORE_PEER_GOSSIP_SKIPHANDSHAKE=true
            - CORE_PEER_PROFILE_ENABLED=true
            - CORE_PEER_MSPCONFIGPATH=/var/hyperledger/msp
            - CORE_PEER_LOCALMSPID=testorg3
            - CORE_LOGGING_LEVEL=DEBUG
            - CORE_CHAINCODE_BUILDER=hyperledger/fabric-ccenv:latest
            - CORE_CHAINCODE_GOLANG_RUNTIME=hyperledger/fabric-yxbaseos:latest            
            # TLS settings
            - CORE_PEER_TLS_ENABLED=true
            - CORE_PEER_TLS_CERT_FILE=/var/hyperledger/tls/server.crt
            - CORE_PEER_TLS_KEY_FILE=/var/hyperledger/tls/server.key
            - CORE_PEER_TLS_ROOTCERT_FILE=/var/hyperledger/tls/ca.crt
        volumes:
            - /var/run/:/host/var/run/
            - ./channel-artifacts:/var/hyperledger/configs
            - ./crypto-config/testorg3/users/Admin@testorg3/msp:/var/hyperledger/msp
            - ./crypto-config/testorg3/peers/peer0/tls:/var/hyperledger/tls
            - ./peer0_org3_logs:/var/fabric_logs/
        ports:
            - 56451:7051
            - 56452:7052
            - 56453:7053
       
        command: peer node start
    peer1.testorg3:
        image: hyperledger/fabric-peer
        container_name: peer1.testorg3
        environment:
            - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
            #- CORE_PEER_NETWORKID=${CORE_PEER_NETWORKID}
            #- CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=${CORE_PEER_NETWORKID}_default
            - CORE_PEER_ID=peer1.testorg3
            - CORE_PEER_ADDRESSAUTODETECT=false
            - CORE_PEER_ADDRESS=172.16.93.215:56551
            - CORE_PEER_GOSSIP_EXTERNALENDPOINT=172.16.93.215:56551
            - CORE_PEER_GOSSIP_BOOTSTRAP=172.16.93.215:56551
            - CORE_PEER_CHAINCODEADDRESS=172.16.93.215:56552
            - CORE_PEER_CHAINCODELISTENADDRESS=0.0.0.0:7052
            - CORE_PEER_GOSSIP_ORGLEADER=false
            - CORE_PEER_GOSSIP_USELEADERELECTION=true
            - CORE_PEER_GOSSIP_SKIPHANDSHAKE=true
            - CORE_PEER_PROFILE_ENABLED=true
            - CORE_PEER_MSPCONFIGPATH=/var/hyperledger/msp
            - CORE_PEER_LOCALMSPID=testorg3
            - CORE_LOGGING_LEVEL=DEBUG
            - CORE_CHAINCODE_BUILDER=hyperledger/fabric-ccenv:latest
            - CORE_CHAINCODE_GOLANG_RUNTIME=hyperledger/fabric-yxbaseos:latest
            # TLS settings
            - CORE_PEER_TLS_ENABLED=true
            - CORE_PEER_TLS_CERT_FILE=/var/hyperledger/tls/server.crt
            - CORE_PEER_TLS_KEY_FILE=/var/hyperledger/tls/server.key
            - CORE_PEER_TLS_ROOTCERT_FILE=/var/hyperledger/tls/ca.crt
        volumes:
            - /var/run/:/host/var/run/
            - ./channel-artifacts:/var/hyperledger/configs
            - ./crypto-config/testorg3/users/Admin@testorg3/msp:/var/hyperledger/msp
            - ./crypto-config/testorg3/peers/peer1/tls:/var/hyperledger/tls
            - ./peer1_org3_logs:/var/fabric_logs/
        ports:
            - 56551:7051
            - 56552:7052
            - 56553:7053
       
        command: peer node start
    cli:
        container_name: cli
        image: hyperledger/fabric-tools
        tty: true
        environment:
            - GOPATH=/opt/gopath
            - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
            - CORE_LOGGING_LEVEL=DEBUG
            - CORE_PEER_ID=cli
            - CORE_PEER_ADDRESS=172.16.93.215:56051
            - CORE_PEER_LOCALMSPID=testorg1
            - CORE_PEER_TLS_ENABLED=true
            - CORE_PEER_TLS_CERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/testorg1/peers/peer0/tls/server.crt
            - CORE_PEER_TLS_KEY_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/testorg1/peers/peer0/tls/server.key
            - CORE_PEER_TLS_ROOTCERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/testorg1/peers/peer0/tls/ca.crt
            - CORE_PEER_MSPCONFIGPATH=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/testorg1/users/Admin@testorg1/msp
        working_dir: /opt/gopath/src/github.com/hyperledger/fabric/peer
        # command: /bin/bash -c './scripts/script.sh ${CHANNEL_NAME}; sleep ${TIMEOUT}'
        volumes:
            - /var/run/:/host/var/run/
            - ./chaincode:/opt/gopath/src/github.com/hyperledger/fabric/examples/chaincode
            - ./crypto-config:/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/
            - ./scripts:/opt/gopath/src/github.com/hyperledger/fabric/peer/scripts/
            - ./channel-artifacts:/opt/gopath/src/github.com/hyperledger/fabric/peer/channel-artifacts
  
        # networks:
        #   default:
        #      aliases:
        #        - ${CORE_PEER_NETWORKID}